(()=>{"use strict";class t{constructor(t,e){this._text=t,this._onClickClb=e}get text(){return this._text}set text(t){this._text=t}onBtnClick(){console.log("Clicked!"),"function"==typeof this._onClickClb&&this._onClickClb()}getMainTemplate(){const t=document.createElement("button");return t.classList.add("btn"),t}getTemplate(){const t=this.getMainTemplate();return t.innerHTML=this.text,t.addEventListener("click",(()=>{this.onBtnClick()})),t}}class e{constructor(t=[]){this.item=[]}add(t){const e=this.items.find((e=>e.name===t.name));new Promise((s=>{e?e.counter++:this.items.push(t),s()})).then(this.render.bind(this))}remove(){}render(){console.log(this.items),this.items.forEach((t=>{t.render()}))}}class s{constructor({name:t,price:e},s){this.name=t,this.price=e,this._cartInstance=s}render(e){if(e){const s=document.createElement("div");s.className="goods-item",s.innerHTML=`\n                <div class="goods-item-img">\n                <img src="https://imgholder.ru/170x140/8493a8/adb9ca&text=ФОТО+ТОВАРА&fz=18" alt="">\n                </div>\n                <div class="goods-item-text">\n                Товар: ${this.name}, \n                <br> Цена: ${this.price}\n                </div>\n                <div class="goods-item-button"></div>\n                `,e.appendChild(s);const i=new t("Добавить в корзину",(()=>{this._cartInstance.add(new n(this))}));s.querySelector(".goods-item-button").appendChild(i.getTemplate())}}}class n extends s{constructor(t){super(t)}render(t){if(t){const e=document.createElement("div");e.classList.add("cart-good"),e.innerHTML=`${this.name} = ${this.price} x ${this.counter}`,t.appendChild(e)}}}const i=new class extends e{constructor(){super(),this.init()}init(){const e=document.createElement("div");e.classList.add("cart");const s=document.createElement("div");s.classList.add("cart-list"),e.appendChild(s);const n=new t("Корзина",(()=>{s.classList.toggle("shown")}));e.appendChild(n.getTemplate()),n.className="cart-button";const i=document.querySelector(".header");i&&i.appendChild(e),this.render()}render(){const t=document.querySelector(".cart-list");t&&(t.innerHTML="",this.items.length?this.items.forEach((e=>{e.render(t)})):t.innerHTML="Нет товаров в корзине!")}};new class extends e{constructor(t){super(),this._cartInstance=t,this.fetchGoods().then((()=>{this.render()}))}fetchGoods(){return fetch("http://localhost:3000/database.json").then((t=>t.json())).then((t=>{console.log(t),this.items.push(...t.data.map((t=>new s(t,this._cartInstance))))})).catch((t=>{console.log(t)}))}render(){const t=document.querySelector(".goods");t&&(t.innerHTML="",this.items.forEach((e=>{e.render(t)})))}}(i)})();